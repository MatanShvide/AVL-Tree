{\rtf1\fbidis\ansi\ansicpg1255\deff0\nouicompat\deflang1037{\fonttbl{\f0\fnil\fcharset177 Arial;}{\f1\fnil\fcharset0 Arial;}{\f2\fnil\fcharset0 Consolas;}{\f3\fnil Consolas;}}
{\colortbl ;\red127\green0\blue85;\red0\green0\blue0;\red0\green0\blue192;\red106\green62\blue62;\red63\green127\blue95;\red42\green0\blue255;}
{\*\generator Riched20 10.0.14393}\viewkind4\uc1 
\pard\rtlpar\sa200\sl276\slmult1\qr\f0\rtlch\fs20\'e4\'f0\'e7\'e9\'e5\'fa \'ec\'e1\'e5\'e3\'f7 \'f9\'f4\'e9\'e5\'fa:\line\par
\ul\b\'e7\'ec\'f7 \'f8\'e0\'f9\'e5\'ef\ulnone\b0\line *\'e4\'f7\'e5\'e3 \'ee\'f8\'eb\'e9\'e1 \'f9\'f0\'e9 \'f2\'f6\'e9\'ed \'e1\'e2\'e5\'e3\'ec \'e0\'f7\'f8\'e0\'e9 \'e1\'e9\'ef 1-100 \'eb\'e0\'f9\'f8 \'e4\'ee\'f4\'fa\'e7\'e5\'fa \'f9\'ec \'e4\'f8\'e0\'f9\'e5\'ef \'f0\'ee\'e5\'eb\'e9\'ed \'ee500 \'e5\'e4\'ee\'f4\'fa\'e7\'e5\'fa \'f9\'ec \'e4\'f9\'f0\'e9 \'e2\'e1\'e5\'e4\'e9\'ed \'ee\'ee\'f0\'e5. \'e4\'ee\'f4\'fa\'e7\'e5\'fa \'f0\'eb\'f0\'f1\'e9\'ed \'ec\'ec\'e0 \'e7\'e6\'f8\'e5\'fa.\par
*\'e4\'f7\'e5\'e3 \'ee\'f8\'eb\'e9\'e1 \'e0\'fa \'e4\'f2\'f5 \'e5\'ee\'e3\'f4\'e9\'f1 \'e0\'fa \'f1\'e3\'f8 \'e4\'e4\'eb\'f0\'f1\'e5\'fa \'eb\'e3\'e9 \'f9\'fa\'e5\'eb\'ec\'e5 \'ec\'e4\'f8\'eb\'e9\'e1 \'e1\'f2\'f6\'ee\'eb\'ed \'e0\'ed \'fa\'f8\'f6\'e5 \'ec\'e1\'e3\'e5\'f7 \'f2\'f5 \'f1\'f4\'f6\'e9\'f4\'e9. \'e1\'f0\'e5\'f1\'f3, \'e4\'e5\'e0 \'ee\'e3\'f4\'e9\'f1 \'e0\'fa \'e4\'f1\'e3\'f8 \f1\ltrch\lang1033 InOrder\f0\rtlch\lang1037  \'eb\'e3\'e9 \'f9\'fa\'e5\'eb\'ec\'e5 \'ec\'e5\'e5\'e3\'e0 \'f9\'e4\'eb\'ec \'f0\'eb\'f0\'f1\\\par
*\'f2\'e1\'e5\'f8 \'eb\'ec \'f2\'f5 \'e4\'e5\'e0 \'f2\'e5\'e1\'f8 \'f2\'ec \'eb\'ec \'e4\'f6\'ee\'fa\'e9\'ed \f1\ltrch\lang1033 InOrder\f0\rtlch\lang1037  \'e5\'e1\'e5\'e3\'f7 \f1\ltrch\lang1033 BalanceFactor,\f0\rtlch\lang1037  \'f7\'e9\'f9\'e5\'f8\'e9\'e5\'fa, \'fa\'f7\'e9\'f0\'e5\'fa \'e3\'f8\'e2\'e4 \'e5\'e9\'e7\'f1\'e9 \'e2\'e5\'e3\'ec \'f2\'ed \'e4\'e1\'f0\'e9\'ed \'f9\'ec\'e5 \'e5\'e4\'e4\'e5\'f8\'e4 \'f9\'ec\'e5. \'e1\'ee\'e9\'e3\'e4 \'e5\'e9\'f9 \'e1\'f2\'e9\'e9\'fa \'f1\'e3\'f8 \'e4\'e5\'e0 \'ee\'f4\'f8\'e3 \'e1\'e0\'e9\'e6\'e4 \'e0\'e9\'f0\'e3\'f7\'f1 \f1\ltrch\lang1033 InOrder\f0\rtlch\lang1037  \'e4\'fa\'f7\'ec\'e4, \'e1\'ee\'e9\'e3\'e4 \'e5\'e9\'f9 \'e1\'f2\'e9\'e9\'fa \'f7\'e9\'f9\'e5\'f8\'e9\'e5\'fa \'e4\'e5\'e0 \'ee\'f4\'f8\'e8 \'e0\'fa \'e4\'ee\'f4\'fa\'e7 \'e5\'e0\'fa \'e1\'f0\'e9\'e5, \'e1\'ee\'e9\'e3\'e4 \'e5\'e9\'f9 \'e1\'f2\'e9\'e9\'fa \f1\ltrch\lang1033 BF\f0\rtlch\lang1037  \'e4\'e5\'e0 \'ee\'e3\'e5\'e5\'e7 \'ee\'f4\'fa\'e7,\'e3\'f8\'e2\'e4,\'e1\'f0\'e9\'ed \'e5\'e3\'f8\'e2\'e5\'fa\'e9\'e4\'ed.\par
\par
\ul\b\'e7\'ec\'f7 \'f9\'f0\'e9\par
\ulnone\b0 *\'e4\'f7\'e5\'e3 \'e9\'e7\'e1\'f8 \'e1\'e9\'ef \'f9\'f0\'e9 \'e4\'f2\'f6\'e9\'ed \'e1\'f2\'e6\'f8\'fa \'e4\'ee\'f4\'fa\'e7 500 \'e5\'e9\'e1\'f6\'f2 \'e0\'fa \'e0\'e5\'fa\'ef \'e4\'e1\'e3\'e9\'f7\'e5\'fa \'f9\'e1\'e9\'f6\'f2 \'f7\'e5\'e3\'ed \'ec\'eb\'ef, \'e4\'f4\'f2\'ed \'f2\'e1\'e5\'f8 \'e4\'f2\'f5 \'e4\'ee\'e7\'e5\'e1\'f8. \'eb\'ee\'e5 \'eb\'ef, \'e9\'e5\'e5\'e3\'e0 \'f9\'eb\'ec \'e4\'ee\'f4\'fa\'e7\'e5\'fa \'f0\'eb\'f0\'f1\'e5.\par
\ul\b\'e7\'ec\'f7 \'f9\'ec\'e9\'f9\'e9\par
\ulnone\b0 *\'f0\'ee\'e7\'f7 5 \'ee\'f4\'fa\'e7\'e5\'fa \'f7\'e1\'e5\'f2\'e9\'ed \'ee\'fa\'e5\'ea \'ee\'e9\'f7\'e5\'ee\'ed \'e1\'f8\'f9\'e9\'ee\'fa \'e4\f1\ltrch\lang1033 InOrder\f0\rtlch\lang1037  \'f9\'ec \'e4\'f2\'f5(\'e0\'fa\'ed \'e9\'eb\'e5\'ec\'e9\'ed \'ec\'f9\'f0\'e5\'fa \'e7\'ec\'f7 \'e6\'e4 \'f2\'ec \'f4\'e9 \'f8\'f6\'e5\'f0\'eb\'ed, \'e9\'e9\'fa\'eb\'f0\'e5 \'fa\'f7\'ec\'e5\'fa \'f8\'e9\'f6\'e4 \'e0\'ed \'e1\'ee\'f7\'f8\'e4 \'e4\'f2\'f5 \'f9\'e9\'f6\'e0 \'ec\'e0 \'fa\'e5\'ee\'ea \'e1\'ee\'f1\'f4\'f8\'e9 \'e4\'e0\'e9\'f0\'e3\'f7\'f1\'e9\'ed \'e4\'f7\'e1\'e5\'f2\'e9\'ed \'f9\'eb\'fa\'e1\'fa\'e9) \'e5\'ee\'e3\'f4\'e9\'f1 \'e0\'fa \'e4\'ee\'f4\'fa\'e7\'e5\'fa \f1\ltrch\lang1033 InOrder\f0\rtlch\lang1037  \'e5\'ee\'e3\'e5\'e5\'e7 \'f2\'ec \'e2\'e5\'e3\'ec \'e4\'f2\'f5 \'e4\'e7\'e3\'f9 \'e5\'ee\'e1\'f6\'f2 \'e0\'fa \'e0\'e5\'fa\'ef \'e4\'e1\'e3\'e9\'f7\'e5\'fa \'f9\'e1\'e9\'f6\'f2 \'f2\'ec \'e4\'f2\'f6\'e9\'ed \'e4\'f7\'e5\'e3\'ee\'e9\'ed.\par
\ul\b\'e7\'ec\'f7 \'f8\'e1\'e9\'f2\'e9\par
\ulnone\b0 *\'f0\'f4\'f6\'ec \'e0\'fa \'e4\'f2\'f5 \'f2\'ec \'f4\'e9 \'e4\'e0\'e9\'e1\'f8 \'e412 \'e1\'f8\'f9\'e9\'ee\'fa \'e4\f1\ltrch\lang1033 InOrder \f0\rtlch\lang1037 (\'f0\'e1\'e7\'f8 \'e1\'e0\'f7\'f8\'e0\'e9\'e5\'fa, \'e0\'fa\'ed \'e9\'eb\'e5\'ec\'e9\'ed \'ec\'f9\'f0\'e5\'fa \'e0\'fa \'e6\'e4) \'e5\'f0\'e1\'f6\'f2 \'e0\'fa \'e0\'e5\'fa\'ef \'e4\'e1\'e3\'e9\'f7\'e5\'fa \'f2\'ec \'f9\'f0\'e9 \'e4\'f2\'f6\'e9\'ed \'e4\'e7\'e3\'f9\'e9\'ed \'e5\'e9\'e3\'f4\'e9\'f1 \'e0\'e5\'fa\'ed \f1\ltrch\lang1033 InOrder\f0\rtlch\lang1037  \'e5\'e9\'e5\'e5\'e3\'e0 \'f9\'e4\'e2\'e3\'ec\'e9\'ed \'fa\'f7\'e9\'f0\'e9\'ed.\par
\par
\par
\ul\b\'e4\'f2\'f8\'e5\'fa\f1\ltrch\lang1033  \f0\rtlch\lang1037\'e7\'f9\'e5\'e1\'e5\'fa\par
\ulnone\b0 *\'e1\'f7\'e5\'e3 \'e9\'f9\'f0\'ed \'e7\'ec\'f7\'e9\'ed \'f9\'ec\'ee\'e9\'ed \'f9\'f0\'ee\'f6\'e0\'e9\'ed \'e1\'e4\'f2\'f8\'e5\'fa \\\\. \'e4\'f1\'e9\'e1\'e4 \'ec\'eb\'ea \'e4\'e9\'e0 \'f9\'ec\'f2\'fa\'e9\'ed \'f7\'f9\'e4 \'ec\'e1\'e3\'e5\'f7 \'e0\'fa \'e4\'f4\'f7\'e5\'e3\'e5\'fa \'eb\'f9\'eb\'ec \'f4\'f2\'ed \'ee\'f7\'e1\'ec\'e9\'ed \'f2\'f5 \'e0\'e7\'f8. \'ec\'eb\'ef \'e9\'f9\'f0\'ef \'f4\'f7\'e5\'e3\'e5\'fa \'ee\'e5\'f7\'f4\'e0\'e5\'fa \'ec\f1\ltrch\lang1033 tree3\f0\rtlch\lang1037  \'f9\'f0\'e5\'f2\'e3 \'ec\'e1\'f0\'e5\'fa \'f2\'f5 \'f7\'e1\'e5\'f2 \'e5\'e0\'f4\'f9\'f8 \'ec\'e4\'f9\'fa\'ee\'f9 \'e1\'e5 \'ec\'e8\'e5\'e1\'fa \'eb\'ec \'e4\'e1\'e3\'e9\'f7\'e5\'fa \'e5\'ec\'e4\'f9\'fa\'e9\'f7 \'e0\'fa \'e4\'f9\'e0\'f8. \'e9\'f9 \'ec\'e5 \'ee\'f9\'fa\'f0\'e4 \'e2\'e5\'e3\'ec, \'f4\'f7\'e5\'e3\'fa \'e0\'fa\'e7\'e5\'ec, \'f8\'f9\'e9\'ee\'fa \'e4\'eb\'f0\'f1\'e5\'fa,\'f8\'f9\'e9\'ee\'fa \f1\ltrch\lang1033 bank\f0\rtlch\lang1037  \'ec\'ee\'f0\'e9\'f2\'fa \'e4\'eb\'f0\'f1\'e5\'fa \'e7\'e5\'e6\'f8\'e5\'fa, \'f8\'f9\'e9\'ee\'fa \'e4\'eb\'f0\'f1\'e5\'fa \f1\ltrch\lang1033 InOrder\f0\rtlch\lang1037 ,  \'ec\'e5\'ec\'e0\'fa \f1\ltrch\lang1033 for\f0\rtlch\lang1037  \'f9\'ec \'e4\'eb\'f0\'f1\'e5\'fa \'e5\'ec\'e1\'f1\'e5\'f3 \'f7\'e8\'f2 \'f9\'ec\'ed \'f9\'ec \'e1\'e3\'e9\'f7\'e5\'fa \'f2\'e1\'e5\'f8\'e5. \'e0\'e7\'f8 \'eb\'ea, \'f0\'e9\'fa\'ef \'ec\'e4\'f7\'f4\'e9\'e0 \'e0\'fa \'e4\'f2\'f6\'e9\'ed \'e4\'e0\'e7\'f8\'e9\'ed \'e5\'ec\'e1\'f6\'f2 \'f4\'f7\'e5\'e3\'fa \f1\ltrch\lang1033 split\f0\rtlch\lang1037  \'e5\'ec\'f9\'f0\'e5\'fa \'e0\'fa \'e4\'ee\'f9\'fa\'f0\'e9\'ed \'e1\'e0\'e2\'f3 \'e4\'e4\'e5\'e0 \'eb\'ea \'f9\'e4\'f4\'e5\'f0\'f7\'f6\'e9\'e4 \'fa\'f4\'f2\'ec \'f2\'ec \'e4\'f2\'f5 \'e4\'f8\'ec\'e5\'e5\'f0\'e8\'e9. \'e4\'f9\'fa\'e3\'ec\'fa\'e9 \'f9\'e6\'e4 \'e9\'e4\'e9\'e4 \'eb\'ee\'e4 \'f9\'e9\'e5\'fa\'f8 \'ee\'e5\'e1\'ef\par
*\'e4\'f7\'e5\'e3 \b\'ec\'e0\b0  \'e1\'e5\'e3\'f7 \'e0\'fa \'eb\'ec \'e4\'f4\'e5\'f0\'f7\'f6\'e9\'e5\'fa \'f9\'ec\'eb\'ef. \'e4\'e5\'e0 \'e1\'e5\'e3\'f7 \'e0\'fa \'fa\'f7\'e9\'f0\'e5\'fa \'e4\'f2\'f5 \'e1\'ec\'e1\'e3 \'e5\'ec\'e0 \'e0\'ed \'e4\'e7\'e6\'f8\'fa\'ed \'e0\'fa \'ee\'f1\'f4\'f8 \'e4\'f4\'f2\'e5\'ec\'e5\'fa \'e4\'f0\'eb\'e5\'ef \'e5\'eb\'e5. \'e7\'e5\'f5 \'ee\'e6\'e4 \'e7\'f9\'e5\'e1 \'ec\'e9 \'ec\'e4\'e3\'e2\'e9\'f9 \'f9\'e0\'f0\'e9 \'f1\'fa\'ed \'f1\'e8\'e5\'e3\'f0\'e8 \'e1\'e9\'f0\'e5\'f0\'e9 \'e5\'ec\'eb\'ef \'e0\'e9\'ef \'f9\'e5\'ed \'f2\'f8\'e5\'e1\'e4 \'ec\'f9\'e5\'ed \'e3\'e1\'f8. \'e4\'f7\'e5\'e3 \'e4\'e6\'e4 \'f2\'e6\'f8 \'ec\'e9 \'ee\'e0\'e3 \'e5\'e0\'f0\'e9 \'ee\'f7\'e5\'e5\'e4 \'f9\'e9\'f2\'e6\'e5\'f8 \'e2\'ed \'ec\'eb\'ed\par
*\'e9\'eb\'e5\'ec\'e5\'fa \'ec\'e4\'e9\'e5\'fa \'eb\'ec \'ee\'e9\'f0\'e9 \'fa\'f7\'ec\'e5\'fa \'f8\'e9\'f6\'e4 \'f9\'f7\'f9\'e5\'f8\'e5\'fa \'e1\'e0\'e9\'f0\'e3\'f7\'f1\'e9\'ed \'e5\'e2\'e3\'ec\'e9 \'f2\'f6\'e9\'ed, \'e1\'f2\'e9\'f7\'f8 \'e1\'e0\'e2\'f3 \'e4\f1\ltrch\lang1033 split \f0\rtlch\lang1037\'e5\'e4\f1\ltrch\lang1033 delete\f0\rtlch\lang1037  \'f9\'ed \'e1\'e7\'f8\'fa\'e9 \'e0\'e9\'f0\'e3\'f7\'f1\'e9\'ed \'f7\'e1\'e5\'f2\'e9\'ed \'ec\'ec\'e0 \'f7\'f9\'f8 \'ec\'f2\'f5. \'f9\'e9\'ee\'e5 \'ec\'e1 \'ec\'e6\'e4 \'e5\'f9\'f0\'e5 \'e1\'e4\'fa\'e0\'ed.\par
*\'e9\'f9\'f0\'e5 \'f4\'ec\'e8 \'ee\'e0\'e3 \'e1\'f8\'e5\'f8 \'f2\'e1\'e5\'f8 \'f9\'e2\'e9\'e0\'e5\'fa \'e1\'ee\'e1\'f0\'e4 \'e4\'f2\'f5, \'eb\'ec \'fa\'f7\'ec\'e5\'fa \'f8\'e9\'f6\'e4 \'f7\'f9\'e5\'f8\'e5\'fa \'ec\f1\ltrch\lang1033 java \f0\rtlch\lang1037\'e5\'ec\'e0 \'ec\'f7\'e5\'e3 \'f2\'f6\'ee\'e5. \'e0\'ed \'e9\'f9 \'fa\'f7\'ec\'e5\'fa \'e1\'f4\'e5\'f0\'f7\'f6\'e9\'e5\'fa \'e1\'f8\'ee\'fa \'e4\'f8\'e9\'f6\'e4, \'e4\'f7\'e5\'e3 \'f4\'f9\'e5\'e8 \'e9\'f8\'e5\'f5 \'e5\'ec\'e0 \'e9\'e9\'e3\'f2 \'ec\'e4\'e2\'e9\'e3 \'ee\'e4 \'e4\'e1\'f2\'e9\'e4 \'e0\'e5 \'e0\'f4\'e9\'ec\'e5 \'ec\'f8\'ee\'e5\'e6. \'e6\'e4 \'f8\'f7 \'e1\'e5\'e3\'f7 \'fa\'f7\'e9\'f0\'e5\'fa \'ee\'e1\'f0\'e4 \'f9\'ec \'f2\'f5.\ul\b\par
\ulnone\b0 *\'e9\'f9\'f0\'ef \'f9\'fa\'e9 \'f4\'e5\'f0\'f7\'f6\'e9\'e5\'fa \'f2\'e6\'f8 \'f9\'e9\'f9 \'ec\'f9\'ec\'e1 \'e1\'ee\'e7\'ec\'f7\'e5\'fa \'f9\'ec\'eb\'ed:\par
\'f4\'e5\'f0\'f7\'f6\'e9\'e9\'fa \'e4\'e5\'f6\'e0\'fa \f1\ltrch\lang1033 BalanceFactor\f0\rtlch\lang1037 , \'e9\'f9 \'ec\'e4\'f0\'e9\'e7 \'e0\'e5\'fa\'ed \'e0\'f6\'ec\'eb\'ed \'e1\f1\ltrch\lang1033 AVLNode\f0\rtlch\lang1037 :\par

\pard\rtlpar\sa200\sl276\slmult1\cf1\b\f2\ltrch\fs24\lang1033 private\cf2\b0\f3\lang1037  \cf1\b int\cf2\b0  getBF() \{\cf0\par
\cf2\tab\tab\tab\cf1\b if\cf2\b0  (\cf1\b this\cf2\b0 .\cf3 rank\cf2  == -1) \{\cf0\par
\cf2\tab\tab\tab\tab\cf1\b return\cf2\b0  -3;\cf0\par
\cf2\tab\tab\tab\}\cf0\par
\cf2\tab\tab\tab\cf1\b return\cf2\b0  \cf1\b this\cf2\b0 .\cf3 left\cf2 .\cf3 rank\cf2  - \cf1\b this\cf2\b0 .\cf3 right\cf2 .\cf3 rank\cf2 ;\cf0\par

\pard\rtlpar\sa200\sl276\slmult1\qr\cf2\tab\tab\}\cf0\f0\rtlch\fs20\par
\'f4\'e5\'f0\'f7\'f6\'e9\'e9\'fa \'e4\'e1\'e3\'e9\'f7\'e4, \'e9\'f9 \'ec\'e4\'f0\'e9\'e7 \'e0\'e5\'fa\'e4 \'e0\'f6\'ec\'eb\'ed \'e1\f1\ltrch\lang1033 AVLTree\f0\rtlch\lang1037 :\par

\pard\rtlpar\sa200\sl276\slmult1\cf2\f2\ltrch\fs24\lang1033\tab\cf1\b\f3\lang1037 public\cf2\b0  \cf1\b void\cf2\b0  print(AVLNode \cf4 node\cf2 , \cf1\b int\cf2\b0  \cf4 level\cf2 ) \{ \cf5 /////\ul aux\ulnone  tester \ul func\cf0\ulnone\par
\cf2\tab\tab\cf1\b if\cf2\b0  (\cf4 node\cf2  == \cf1\b null\cf2\b0 ) \{\cf0\par
\cf2\tab\tab\tab\cf1\b return\cf2\b0 ;\cf0\par
\cf2\tab\tab\}\cf0\par
\cf2\tab\tab\cf5 //System.out.println("Level: " + level + " , " + node.getKey() + " , " + node.getValue());\cf0\par
\cf2\tab\tab\cf1\b if\cf2\b0  ((\cf4 node\cf2 .\cf3 key\cf2  != -1) && ((\cf4 node\cf2 .getBF() >= 2) || (\cf4 node\cf2 .getBF() <= -2))) \{\cf0\par
\cf2\tab\tab\tab System.\cf3\b\i out\cf2\b0\i0 .println(\cf6 "node"\cf2  + \cf4 node\cf2 .\cf3 key\cf2  + \cf6 " is unbalanced. BF is "\cf2  + \cf4 node\cf2 .getBF() + \cf6 ". sons are "\cf0\par
\cf2\tab\tab\tab\tab\tab + \cf4 node\cf2 .\cf3 left\cf2 .\cf3 key\cf2  + \cf6 " rank="\cf2  + \cf4 node\cf2 .\cf3 left\cf2 .\cf3 rank\cf2  + \cf6 " "\cf2  + \cf4 node\cf2 .\cf3 right\cf2 .\cf3 key\cf2  + \cf6 " rank="\cf2  + \cf4 node\cf2 .\cf3 right\cf2 .\cf3 rank\cf0\par
\cf2\tab\tab\tab\tab\tab + \cf6 "*********"\cf2 );\cf0\par
\cf2\tab\tab\} \cf1\b else\cf2\b0  \cf1\b if\cf2\b0  (((\cf4 node\cf2 .\cf3 right\cf2  != \cf1\b null\cf2\b0 ) && (\cf4 node\cf2 .\cf3 right\cf2 .\cf3 key\cf2  < \cf4 node\cf2 .\cf3 key\cf2 ) && (\cf4 node\cf2 .\cf3 right\cf2 .\cf3 key\cf2  != -1))\cf0\par
\cf2\tab\tab\tab\tab || ((\cf4 node\cf2 .\cf3 left\cf2  != \cf1\b null\cf2\b0 ) && (\cf4 node\cf2 .\cf3 left\cf2 .\cf3 key\cf2  > \cf4 node\cf2 .\cf3 key\cf2 ) && (\cf4 node\cf2 .\cf3 left\cf2 .\cf3 key\cf2  != -1))) \{\cf0\par
\cf2\tab\tab\tab System.\cf3\b\i out\cf2\b0\i0 .println(\cf6 "node"\cf2  + \cf4 node\cf2 .\cf3 key\cf2  + \cf6 "is not in order********"\cf2 );\cf0\par
\cf2\tab\tab\} \cf1\b else\cf2\b0  \cf1\b if\cf2\b0  ((\cf4 node\cf2 .\cf3 rank\cf2  == -1) && ((\cf4 node\cf2 .\cf3 right\cf2  != \cf1\b null\cf2\b0 ) || (\cf4 node\cf2 .\cf3 left\cf2  != \cf1\b null\cf2\b0 ))) \{\cf0\par
\cf2\tab\tab\tab System.\cf3\b\i out\cf2\b0\i0 .println(\cf6 "virtual son of"\cf2  + \cf4 node\cf2 .\cf3 parent\cf2 .\cf3 key\cf2  + \cf6 " has a son*********"\cf2 );\cf0\par
\cf2\tab\tab\} \cf1\b else\cf2\b0  \cf1\b if\cf2\b0  ((\cf4 node\cf2 .\cf3 right\cf2  != \cf1\b null\cf2\b0 ) && (\cf4 node\cf2 .\cf3 right\cf2 .\cf3 parent\cf2  != \cf4 node\cf2 )\cf0\par
\cf2\tab\tab\tab\tab || ((\cf4 node\cf2 .\cf3 left\cf2  != \cf1\b null\cf2\b0 ) && (\cf4 node\cf2 .\cf3 left\cf2 .\cf3 parent\cf2  != \cf4 node\cf2 ))) \{\cf0\par
\cf2\tab\tab\tab System.\cf3\b\i out\cf2\b0\i0 .println(\cf6 "one of"\cf2  + \cf4 node\cf2 .\cf3 key\cf2  + \cf6 "sons is not connected to him*********"\cf2 );\cf0\par
\cf2\tab\tab\} \cf1\b else\cf2\b0  \cf1\b if\cf2\b0  ((\cf4 node\cf2 .\cf3 parent\cf2  != \cf1\b null\cf2\b0 ) && (\cf4 node\cf2 .\cf3 parent\cf2 .\cf3 right\cf2  != \cf4 node\cf2 ) && (\cf4 node\cf2 .\cf3 parent\cf2 .\cf3 left\cf2  != \cf4 node\cf2 )) \{\cf0\par
\cf2\tab\tab\tab System.\cf3\b\i out\cf2\b0\i0 .println(\cf6 "node"\cf2  + \cf4 node\cf2 .\cf3 key\cf2  + \cf6 " is not connected to parent********"\cf2 );\cf0\par
\cf2\tab\tab\} \cf1\b else\cf2\b0  \cf1\b if\cf2\b0  ((\cf4 node\cf2 .\cf3 rank\cf2  != -1) && (\cf4 node\cf2 .\cf3 rank\cf2  != (Math.\i max\i0 (\cf4 node\cf2 .\cf3 left\cf2 .\cf3 rank\cf2 , \cf4 node\cf2 .\cf3 right\cf2 .\cf3 rank\cf2 ) + 1))) \{\cf0\par
\cf2\tab\tab\tab System.\cf3\b\i out\cf2\b0\i0 .println(\cf6 "node"\cf2  + \cf4 node\cf2 .\cf3 key\cf2  + \cf6 " rank is not adjusted, his rank is"\cf2  + \cf4 node\cf2 .\cf3 rank\cf2 );\cf0\par
\cf2\tab\tab\tab System.\cf3\b\i out\cf2\b0\i0 .println(\cf6 "sons are"\cf2  + \cf4 node\cf2 .\cf3 left\cf2 .\cf3 key\cf2  + \cf6 " rank "\cf2  + \cf4 node\cf2 .\cf3 left\cf2 .\cf3 rank\cf2  + \cf6 " and "\cf2  + \cf4 node\cf2 .\cf3 right\cf2 .\cf3 key\cf0\par
\cf2\tab\tab\tab\tab\tab + \cf6 " rank "\cf2  + \cf4 node\cf2 .\cf3 right\cf2 .\cf3 rank\cf2 );\cf0\par
\cf2\tab\tab\}\cf0\par
\par
\cf2\tab\tab\cf1\b if\cf2\b0  (\cf4 node\cf2 .getLeft() != \cf1\b null\cf2\b0 )\cf0\par
\cf2\tab\tab\tab print((AVLNode) (\cf4 node\cf2 .getLeft()), \cf4 level\cf2  + 1);\cf0\par
\cf2\tab\tab\cf1\b if\cf2\b0  (\cf4 node\cf2 .getRight() != \cf1\b null\cf2\b0 )\cf0\par
\cf2\tab\tab\tab print((AVLNode) \cf4 node\cf2 .getRight(), \cf4 level\cf2  + 1);\cf0\par

\pard\rtlpar\sa200\sl276\slmult1\qr\cf2\tab\}\cf0\f1\fs20\lang1033\par
}
 